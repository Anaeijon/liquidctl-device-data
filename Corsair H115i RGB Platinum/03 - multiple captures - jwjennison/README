Provided by: @jwjennison
Provided at: 2020-02-07
Source: https://github.com/jonasmalacofilho/liquidctl/issues/76#issuecomment-583374803
Source: https://github.com/jonasmalacofilho/liquidctl/files/4170798/icue.individuals.zip

---

MORE OBVIOUS FIELDS

fan100percent:         3fd01400ff05ffffffffff0200000000ff0200000000ff02ffff0000ff071c401d4d1e78209922b324d926ff1c401d4d1e78209922b324d926ffffffffffffe9 (data[1] = 1101 0000)
FansAnd Pump-Quiet:    3f201400ff05ffffffffff00000000000000000000000000ffff0000ff071d401f4d2261248027b82ad92cff1d401f4d2261248027b82ad92cfffffffffffff9 (data[1] = 0010 0000)
FansAndPump-Balanced:  3ff81400ff05ffffffffff00000000000000000000000001ffff0000ff071c401d4d1e78209922b324d926ff1c401d4d1e78209922b324d926ffffffffffff4f (data[1] = 1111 1000)
FansAndPump-extreme:   3fe01400ff05ffffffffff00000000000000000000000002ffff0000ff07186619801aa81bc41ce01df21eff186619801aa81bc41ce01df21effffffffffff0d (data[1] = 1110 0000)
                         ^^ some counter << some width | command                                                                                                         ^^^ command

LEDs-Blue:             3facff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000009a (data[1] = 1010 1100)
                       3fb5ff0000ff0000ff0000ff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000026 (data[1] = 1011 0101)
LEDs-Green:            3f8c00ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000e3 (data[1] = 1000 1100)
                       3f9500ff0000ff0000ff0000ff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b8 (data[1] = 1001 0101)
LEDs-Red:              3f540000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0000ff0094 (data[1] = 0101 0100)
                       3f5d0000ff0000ff0000ff0000ff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000037 (data[1] = 0101 1101)
                         ^^ some counter << some width | command                                                                                                         ^^^ command
                           ^^ 20 + 4 BGR colors

other/only status:     3f78ff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006c (data[1] = 0111 1000)
(from fan100percent)   3f88ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b7 (data[1] = 1000 1000)
                       3f98ff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006e (data[1] = 1001 1000)
                       3fa8ff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002 (data[1] = 1010 1000)
                       3fb8ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000db (data[1] = 1011 1000)
                         ^^ some counter << some width | command                                                                                                         ^^^ command


PURPOSE OF THE LAST BYTE

(from fan100percent, from host to cooler)
>>> data = bytes.fromhex('3f78ff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006c')
>>> hex(compute_pec(data[1:]))
'0x0'
>>> data = bytes.fromhex('3f88ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000b7')
>>> hex(compute_pec(data[1:]))
'0x0'
>>> data = bytes.fromhex('3f98ff0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006e')
>>> hex(compute_pec(data[1:]))
'0x0'
>>> data = bytes.fromhex('3fa8ff00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000002')
>>> hex(compute_pec(data[1:]))
'0x0'
>>> data = bytes.fromhex('3fb8ff000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000db')
>>> hex(compute_pec(data[1:]))
'0x0'

(from fan100percent, from cooler to host)
>>> data = bytes.fromhex('ff78110f002e00bd1b0000d9e803d9320600d9e803d9920602ff0000ffe90a000000000000000000000000000000000000000000000000000000000000000021')
>>> hex(compute_pec(data[1:]))
'0x0'
>>> data = bytes.fromhex('ff80110f002f00c21b0000d9e803d92a0600d9e803d9910602ff0000ffeb0a00000000000000000000000000000000000000000000000000000000000000003f')
>>> hex(compute_pec(data[1:]))
'0x0'

8-bit PEC from second to second last bytes, using the SMBus polynomial.


TRANSMITTING THE COMMAND

The command is sent in the 3 least significant bits of byte offset 0x1; the remaining of that byte appears to be a 5-bit sequence number.

Recognized commands:

 - 0x4 (0b100): set lighting
 - 0x5 (0b101): set lighting, continued
 - 0x0 (0b000): set cooling (byte offset 0x2 == 0x14) or just read status (byte offset 0x2 == 0xff)
